name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    # Add branch protection for workflow_dispatch
    if: github.ref == 'refs/heads/main' || github.event_name != 'workflow_dispatch'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
      fail-fast: false
    
    env:
      # Core API keys
      TEST_ANTHROPIC_API_KEY: ${{ secrets.TEST_ANTHROPIC_API_KEY }}
      TEST_OPENAI_API_KEY: ${{ secrets.TEST_OPENAI_API_KEY }}
      TEST_GEMINI_API_KEY: ${{ secrets.TEST_GEMINI_API_KEY }}
      
      # Azure OpenAI settings
      TEST_AZURE_API_KEY: ${{ secrets.TEST_AZURE_API_KEY }}
      TEST_AZURE_API_BASE: ${{ secrets.TEST_AZURE_API_BASE }}
      TEST_AZURE_API_VERSION: ${{ secrets.TEST_AZURE_API_VERSION }}
      TEST_AZURE_DEPLOYMENT_NAME: ${{ secrets.TEST_AZURE_DEPLOYMENT_NAME }}
      
      # Additional providers
      TEST_GROQ_API_KEY: ${{ secrets.TEST_GROQ_API_KEY }}
      TEST_XAI_API_KEY: ${{ secrets.TEST_XAI_API_KEY }}
      TEST_GITHUB_API_KEY: ${{ secrets.TEST_GITHUB_API_KEY }}
      TEST_OPENROUTER_API_KEY: ${{ secrets.TEST_OPENROUTER_API_KEY }}
      TEST_OPENROUTER_API_BASE: ${{ secrets.TEST_OPENROUTER_API_BASE }}

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Install dependencies
      run: |
        uv pip install --system pytest pytest-cov pytest-dotenv
        uv sync
    
    - name: Run tests
      run: |
        # Run core tests first (most reliable providers)
        uv run pytest tests/ -v -k "anthropic or openai or gemini" --durations=10
        
        # Run extended provider tests
        uv run pytest tests/ -v -k "not (anthropic or openai or gemini)" --durations=10
    
    - name: Upload coverage
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false 